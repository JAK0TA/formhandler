plugin.tx_formhandler_form.settings.predefinedForms.devExample {
  formId = DevExampleForm
  formName = Dev Example Form
  formValuesPrefix = DevExampleForm
  templateForm = DevExampleForm/DevExampleHTML
  templateMailHtml = DevExample/MailHtml
  templateMailText = DevExample/MailText

  loggers {
    Database {
      model = DatabaseLoggerModel
    }
  }

  steps {
    1 {
      templateForm = DevExampleForm/DevExampleHTML
      validators {
        DefaultValidator {
          model = DefaultValidatorModel
          config {
            fields {
              customer.fields {
                salutation.errorChecks {
                  required {
                    model = RequiredModel
                  }
                }
                firstname.errorChecks {
                  required {
                    model = RequiredModel
                  }
                  maxLength {
                    model = MaxLengthModel
                    maxLength = 20
                  }
                }
                lastname.errorChecks {
                  required {
                    model = RequiredModel
                  }
                  maxLength {
                    model = MaxLengthModel
                    maxLength = 20
                  }
                }
                telephone.errorChecks {
                  required {
                    model = RequiredModel
                  }
                  maxLength {
                    model = MaxLengthModel
                    maxLength = 20
                  }
                }
                email.errorChecks {
                  required {
                    model = RequiredModel
                  }
                  maxLength {
                    model = MaxLengthModel
                    maxLength = 50
                  }
                  email {
                    model = EmailModel
                  }
                }
              }
            }
          }
        }
      }
    }
    2 {
      templateForm = DevExampleForm/DevExampleHTML
      validators {
        DefaultValidator {
          model = DefaultValidatorModel
          config {
            fields {

              booking.fields {
                cabins {
                  fieldArray = true
                  fields {
                    persons {
                      fieldArray = true
                      fields {
                        salutation.errorCheck {
                          required {
                            model = RequiredModel
                          }
                        }

                        firstname.errorCheck {
                          required {
                            model = RequiredModel
                          }
                          maxLength {
                            model = MaxLengthModel
                            maxLength = 255
                          }
                        }

                        lastname.errorCheck {
                          required {
                            model = RequiredModel
                          }
                          maxLength {
                            model = MaxLengthModel
                            maxLength = 255
                          }
                        }
                      }
                    }
                  }
                  errorCheck {
                    required {
                      model = RequiredModel
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    3 {
      templateForm = DevExampleForm/DevExampleHTML
      validators {
        DefaultValidator {
          model = DefaultValidatorModel
          config {
            fields {
              payment.fields.direct.fields {
                salutation.errorCheck {
                  required {
                    model = RequiredModel
                  }
                }

                firstname.errorCheck {
                  required {
                    model = RequiredModel
                  }
                  maxLength {
                    model = MaxLengthModel
                    maxLength = 255
                  }
                }

                lastname.errorCheck {
                  required {
                    model = RequiredModel
                  }
                  maxLength {
                    model = MaxLengthModel
                    maxLength = 255
                  }
                }

                country.errorCheck {
                  required {
                    model = RequiredModel
                  }
                  maxLength {
                    model = MaxLengthModel
                    maxLength = 255
                  }
                }

                email.errorCheck {
                  maxLength {
                    model = MaxLengthModel
                    maxLength = 255
                  }
                  email {
                    model = EmailModel
                  }
                }
              }
            }
          }
        }
      }
    }
    4 {
      templateForm = DevExampleForm/DevExampleHTML
      validators {
        DefaultValidator {
          model = DefaultValidatorModel
          config {
            fields {
              message.errorChecks {
                required {
                  model = RequiredModel
                }
              }

              privacy_policy.errorChecks {
                required {
                  model = RequiredModel
                }
                containsOne {
                  model = ContainsOneModel
                  words = Yes,Ja
                }
              }
            }
          }
        }
      }
    }
  }

  finishers {
    Mail {
      model = MailFinisherModel
    }    
    Redirect {
      model = RedirectFinisherModel
      config {
        returns = true
      }
    }
  }
}
