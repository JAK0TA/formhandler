plugin.tx_formhandler_form.settings.predefinedForms.devExample {
  formId = DevExampleForm
  formName = Dev Example Form
  formValuesPrefix = DevExampleForm
  langFileDefault = locallang_example_form.xlf
  templateForm = 
  templateMailHtml = DevExample/MailHtml
  templateMailText = DevExample/MailText

  fileUpload {
    nameCleanUp {
      search = /[^A-Za-z0-9_.-]/
      separator = 
      replace = 
      usePregReplace = true
    }
    removal {
      active = true
      text = X
    }
    total {
      countMax = 
      sizeMax = 
    }
    withSameName = ignore
  }

  preProcessors {
    setSalutations {
      model = SetSelectOptionsPreProcessor
      config {
        name = salutation
        options {
          mr {
            value = mr
            title = Mr.
          }
          mrs {
            value = mrs
            title = Mrs.
          }
        }
      }
    }
    setCountry {
      model = SetSelectOptionsPreProcessor
      config {
        name = country
        options {
          DE {
            value = DE
            title = Germany
          }
          USA {
            value = USA
            title = United States of America
          }
        }
      }
    }
  }

  debuggers {
    VarDumpDebugger {
      model = PrintToScreenDebugger
      config {
        active = true
      }
    }
  }

  loggers {
    Database {
      model = DatabaseLogger
    }
  }

  steps {
    1 {
      templateForm = DevExampleForm/DevExampleHTMLStep1
      validators {
        DefaultValidator {
          model = DefaultValidator
          config {
            messageLimit = 1
            messageLimits {
              1.customer.email = 2
            }
            fields {
              customer.fields {
                salutation.errorChecks {
                  required {
                    model = Required
                  }
                }
                firstname.errorChecks {
                  required {
                    model = Required
                  }
                  lengthMax {
                    model = LengthMax
                    lengthMax = 20
                  }
                }
                lastname.errorChecks {
                  required {
                    model = Required
                  }
                  lengthMax {
                    model = LengthMax
                    lengthMax = 20
                  }
                }
                streetAddress.errorChecks {
                  required {
                    model = Required
                  }
                }
                postalCode.errorChecks {
                  required {
                    model = Required
                  }
                }
                city.errorChecks {
                  required {
                    model = Required
                  }
                  lengthMax {
                    model = LengthMax
                    lengthMax = 70
                  }
                }
                country.errorChecks {
                  required {
                    model = Required
                  }
                }
                telephone.errorChecks {
                  required {
                    model = Required
                  }
                  lengthMax {
                    model = LengthMax
                    lengthMax = 20
                  }
                }
                email.errorChecks {
                  required {
                    model = Required
                  }
                  lengthMax {
                    model = LengthMax
                    lengthMax = 50
                  }
                  email {
                    model = Email
                  }
                }
              }
            }
          }
        }
      }
    }
    2 {
      templateForm = DevExampleForm/DevExampleHTMLStep2
      validators {
        DefaultValidator {
          model = DefaultValidator
          config {
            fields {

              booking.fields {
                cabins {
                  fieldArray = true
                  fields {
                    persons {
                      fieldArray = true
                      fields {
                        salutation.errorCheck {
                          required {
                            model = Required
                          }
                        }

                        firstname.errorCheck {
                          required {
                            model = Required
                          }
                          lengthMax {
                            model = LengthMax
                            lengthMax = 255
                          }
                        }

                        lastname.errorCheck {
                          required {
                            model = Required
                          }
                          lengthMax {
                            model = LengthMax
                            lengthMax = 255
                          }
                        }
                      }
                    }
                  }
                  errorCheck {
                    required {
                      model = Required
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    3 {
      templateForm = DevExampleForm/DevExampleHTMLStep3
      validators {
        DefaultValidator {
          model = DefaultValidator
          config {
            fields {
              payment.fields.direct.fields {
                salutation.errorCheck {
                  required {
                    model = Required
                  }
                }

                firstname.errorCheck {
                  required {
                    model = Required
                  }
                  lengthMax {
                    model = LengthMax
                    lengthMax = 255
                  }
                }

                lastname.errorCheck {
                  required {
                    model = Required
                  }
                  lengthMax {
                    model = LengthMax
                    lengthMax = 255
                  }
                }

                country.errorCheck {
                  required {
                    model = Required
                  }
                  lengthMax {
                    model = LengthMax
                    lengthMax = 255
                  }
                }

                email.errorCheck {
                  lengthMax {
                    model = LengthMax
                    lengthMax = 255
                  }
                  email {
                    model = Email
                  }
                }
              }
            }
          }
        }
      }
    }
    4 {
      templateForm = DevExampleForm/DevExampleHTMLStep4
      validators {
        DefaultValidator {
          model = DefaultValidator
          config {
            fields {
              message.errorChecks {
                required {
                  model = Required
                }
              }

              privacy_policy.errorChecks {
                required {
                  model = Required
                }
                containsOne {
                  model = ContainsOne
                  words = Yes,Ja
                }
              }
            }
          }
        }
      }
    }
  }

  finishers {
    Mail {
      model = MailFinisher
    }    
    Redirect {
      model = RedirectFinisher
      config {
        returns = true
        correctRedirectUrl = false
        additionalParams {
          postal_code = 1.customer.postalCode
          queryParam2 = valueIfNotFoundAsFieldName
        }
      }
    }
  }
}
